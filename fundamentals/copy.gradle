task copyImages(type: Copy) {
    from 'images'
    into 'build'
}

task copyJpegs(type: Copy) {
    from 'images'
    include '*.jpg'
    into 'build'
}

task copyImageFolders(type: Copy) {
    from('images') {
        include '*.jpg'
        into 'jpeg'
    }

    from('images') {
        include '*.gif'
        into 'gif'
    }

    into 'build'
}


// Archive tasks are nearly identical to Copy tasks

task zipImages(type: Zip) {
    archiveBaseName = 'images'
    destinationDirectory = file('build')
    from 'images'
}

task zipImageFolders(type: Zip) {
    archiveBaseName = 'images'
    destinationDirectory = file('build')

    from('images') {
        include '*.jpg'
        into 'jpeg'
    }

    from('images') {
        include '*.gif'
        into 'gif'
    }
}

task deleteBuild(type: Delete) {
    delete 'build'
}



/*
    Exercises:

    1. Create a task named "copyWeb". This task should perform the following:
        a) Copy files from "src/web" to a folder "build/web".
        b) Copy all .txt files from "src/docs" to folder "build/web/help".

    2. Create a task named "bundleWeb". This task should perform the following:
        a) Create a zip file located in the "build" folder named "web.zip".
        b) Include all the files copied by the "copyWeb" task except the
        "images" directory.

    3. Create a task named "unpackBundle". This task should perform the following:
        a) Expand the zip file created by the "bundleWeb" task.
        b) Copy the contents to a folder "build/exploded".

    HINT: There isn't an UnZip task, so what task type do you need? You're kinda copying files so...
    HINT: https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:zipTree(java.lang.Object)

    4. Create a task named "deleteHelp". This task should perform the following:
        a) Delete the "help" folder created by the "copyWeb" task.
 */

task copyWeb(type: Copy) {
    from 'src/web'
    from('src/docs') {
        include '*.txt'
        into 'help'
    }
    into 'build/web'
}

task bundleWeb(type: Zip, dependsOn: copyWeb) {
    archiveBaseName = 'web'
    destinationDirectory = file('build')

    from 'build/web'
    exclude 'images/**'
}

task unpackBundle(type: Copy, dependsOn: bundleWeb) {
    from zipTree('build/web.zip')
    into 'build/exploded'
}

task deleteHelp(type: Delete, dependsOn: copyWeb) {
    delete 'build/web/help'
}


/*
Exercises:

1. Add logging statements at the beginning and end of the task action for
   the HelloTask at the INFO level.
2. Execute the "hello" task with the appropriate command line options such
   that our newly added logging statements are shown in the console output.
3. Modify the `println()` call in our task action to instead be a logging
   statement at the LIFECYCLE level.
4. Execute the "hello" task and confirm the output.
5. Execute the "hello" task with the appropriate command line options such
   that the text "Hello World" is no longer written to the console output.
6. Uncomment and run the "derpy" task below, then use "--stacktrace" to find
   the error.
7. CHALLENGE! Log "Catch me if you can" at DEBUG level, then use grep (or
    findstr on Windows) to find that message in the logs.
 */


task hello(type: HelloTask)

class HelloTask extends DefaultTask {
    @TaskAction
    void doAction() {
        logger.info 'Start HelloTask Action'
        logger.lifecycle 'Hello World'
        logger.info 'End HelloTask Action'
    }
}

/*
The error in the "derpy" task is:
Caused by: org.gradle.api.internal.MissingMethodException:
Could not find method primp() for arguments [Herp de derp] on root project '1.16-Exercise-InvestigateLogging'.

MAC:
    $ gradle -b solution.gradle --debug hello | grep 'Catch me if you can'
Windows:
    $ gradle -b solution.gradle --debug hello | findstr "Catch me if you can"
 */

logger.debug "Catch me if you can"

/*
MAC:
    $ gradle -b solution.gradle --debug hello2 | grep 'Hello World'
Windows:
    $ gradle -b solution.gradle --debug hello2 | findstr "Hello World"
 */

task hello2 {
    doLast {
        println "Hello World"
    }
    // replace <<
    // Left shift operator represents doLast { }
}

